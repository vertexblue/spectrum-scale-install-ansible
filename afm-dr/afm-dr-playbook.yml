---
- hosts: all
  tasks:
    - name: Enable AFM on both clusters
      shell: /usr/lpp/mmfs/bin/mmchconfig afmEnableADR=yes -i
      register: ps
      
      changed_when: false
      failed_when: false

#----------------------------------------- target cluster ----------------------------------------------

- hosts: afm-dr-target-gui-hostname
  vars:
    input: "{{ lookup('file','afm-dr-config.json') | from_json }}"

  pre_tasks:
   - name: Make Sure the mandatory input values are passed from the configuration json file - dr-config.json
     fail:
      msg: "Variables file dr-config.json must exist the same directory"
     when: input is not defined or input.source_scale_gui_username is not defined

  tasks:
    - set_fact:
        scale_remotemount_debug: true
        source_scale_gui_username: "{{ input.source_scale_gui_username }}"
        source_scale_gui_password: "{{ input.source_scale_gui_password }}"
        source_scale_gui_hostname: "{{ input.source_scale_gui_hostname }}"
        target_scale_gui_username: "{{ input.target_scale_gui_username }}"
        target_scale_gui_password: "{{ input.target_scale_gui_password }}"
        target_scale_gui_hostname: "{{ input.target_scale_gui_hostname }}"
        afm_dr_mappings: "{{ input.afm_dr_mappings }}"
        validate_certs_uri: "no"
        restapi_retries_count: 5
        restapi_retries_delay: 3
        scalemgmt_endpoint: "scalemgmt/v2"
        remote_mount_endpoint: "scalemgmt/v2/remotemount"
      

    - name: Print input of filesystem names
      debug:
        msg: "{{ afm_dr_mappings | json_query(jmesquery) | unique }}"
      vars:
        jmesquery: "[*].target_scale_filesystem"  
      
    - name: target Cluster (access) | Initialize variables
      include_tasks: afm-dr-common.yml
      
    # Auth cluster
    - name: target Cluster (access) | Check source cluster ({{source_cluster_name}}) on the target cluster ({{target_cluster_name}})
      command: /usr/lpp/mmfs/bin/mmauth show {{source_cluster_name}}
      register: check_mmauth_show
      failed_when: "source_cluster_name not in check_mmauth_show.stderr"
      ignore_errors: true

    - debug:
         msg: "{{ check_mmauth_show }}"
      when: scale_remotemount_debug is defined and scale_remotemount_debug | bool         

    - name: target Cluster (access) | Add source cluster ({{source_cluster_name}}) on the target cluster ({{target_cluster_name}})
      command: /usr/lpp/mmfs/bin/mmauth add {{source_cluster_name}} -k "/var/mmfs/ssl/source_rsa.pub"
      delay: 3
      register: check_mmauth_key
      failed_when: "'success' not in enable_afm_result.stderr"
      when: check_mmauth_show.rc not in [0]

    - debug:
         msg: "{{ check_mmauth_key }}"
      when: scale_remotemount_debug is defined and scale_remotemount_debug | bool     

    # Add filesystems
    - set_fact:
        afm_dr_target_filesystem: "{{ afm_dr_mappings | json_query(jmesquery) | unique }}"
      vars:
        jmesquery: "[*].target_scale_filesystem"
  
    - name: Print configuration of filesystem names
      debug:
        msg: "{{ afm_dr_target_filesystem }}"
      vars:
        jmesquery: "[*].target_scale_filesystem"  

    - name: target Cluster (access) | Granting and mounting afm configuration of the filesystem
      include_tasks: afm-dr-target-filesystem.yml
      loop: "{{ afm_dr_target_filesystem }}"      
      loop_control:
        loop_var: target_filesystem_loop
        index_var: index   

    # Add gateway
    - set_fact:
        target_storage_nodes_list: []  

    - name: Build a list of all the storage nodes of ({{target_cluster_name}})
      set_fact:
        target_storage_nodes_list: "{{ target_storage_nodes_list }} + [ '{{ item.split('.').0 }}' ]"
      with_items: "{{ target_cluster_storage_nodes_name }}"

    - name: Print Source cluster storage nodes
      debug:
        msg: "{{ target_storage_nodes_list }}"      

    - name: target Cluster (access) | Add storage node {{target_storage_nodes_list}} to gateway role
      include_tasks: afm-dr-target-gateway-nodes.yml
      loop: "{{ target_storage_nodes_list }}"  
      
#--------------------------------------------------------------------------      

- hosts: afm-dr-source-gui-hostname
  vars:
    input: "{{ lookup('file','afm-dr-config.json') | from_json }}"
  
  pre_tasks:
   - name: Make Sure the mandatory input values are passed from the configuration json file - dr-config.json
     fail:
      msg: "Variables file dr-config.json must exist the same directory"
     when: input is not defined or input.source_scale_gui_username is not defined

  tasks:
    - set_fact: 
        scale_remotemount_debug: true
        source_scale_gui_username: "{{ input.source_scale_gui_username }}"
        source_scale_gui_password: "{{ input.source_scale_gui_password }}"
        source_scale_gui_hostname: "{{ input.source_scale_gui_hostname }}"
        target_scale_gui_username: "{{ input.target_scale_gui_username }}"
        target_scale_gui_password: "{{ input.target_scale_gui_password }}"
        target_scale_gui_hostname: "{{ input.target_scale_gui_hostname }}"
        afm_dr_mappings: "{{ input.afm_dr_mappings }}"
        validate_certs_uri: "no"
        restapi_retries_count: 5
        restapi_retries_delay: 3
        scalemgmt_endpoint: "scalemgmt/v2"
        remote_mount_endpoint: "scalemgmt/v2/remotemount"

    - name: Mount Filesystem | target Cluster (access) | Add filesets 
      include_tasks: afm-dr-common.yml

    - set_fact:
        target_storage_nodes_list: []  

    - name: Build a list of all the storage nodes of ({{target_cluster_name}})
      set_fact:
        target_storage_nodes_list: "{{ target_storage_nodes_list }} + [ '{{ item.split('.').0 }}' ]"
      with_items: "{{ target_cluster_storage_nodes_name }}"

    - name: Print Source cluster storage nodes
      debug:
        msg: "{{ target_storage_nodes_list }}"

    # Add remote cluster
    - name: "target Cluster (access) | Assign remote cluster role to storage nodes"
      shell: mmremotecluster add {{target_cluster_name}} -n {{target_storage_nodes_list | join(',')}} -k "/var/mmfs/ssl/target_rsa.pub"
      register: assign_remotecluster_return      
      ignore_errors: true  

    - name: Print output for remote cluster assignment
      debug:
        msg: "{{ assign_remotecluster_return }}"

    - set_fact:
        remotecluster_status: "Failed"
        
    - set_fact:
        remotecluster_status: "Success"
      when: ((('success' in assign_remotecluster_return.stderr) and (assign_remotecluster_return.rc in [0])) or (('already defined' in assign_remotecluster_return.stderr) and (assign_remotecluster_return.rc in [1])))

    - name: target Cluster (access) | Assign remote cluster {{target_cluster_name}} of storage nodes ({{target_storage_nodes_list}})
      debug:
        msg: "Assign remote cluster {{target_cluster_name}} is {{ remotecluster_status }}"
      failed_when: (remotecluster_status == "Failed")
       
    # Add filesystems
    - name: Print input of filesystem names
      debug:
        msg: "{{ afm_dr_mappings | json_query(jmesquery) | unique }}"
      vars:
        jmesquery: "[*].target_scale_filesystem"  

    - set_fact:
        afm_dr_target_filesystem: "{{ afm_dr_mappings | json_query(jmesquery) | unique }}"
      vars:
        jmesquery: "[*].target_scale_filesystem"
  
    - name: Print configuration of filesystem names
      debug:
        msg: "{{ afm_dr_target_filesystem }}"
      vars:
        jmesquery: "[*].target_scale_filesystem" 

    - name: Mount Filesystem | target Cluster (access) | Add and Mount the filesystems
      include_tasks: afm-dr-filesystems.yml
      loop: "{{ afm_dr_target_filesystem }}"      
      loop_control:
        loop_var: target_filesystem_loop
        index_var: index

    - name: Mount Filesystem | target Cluster (access) | Add filesets 
      include_tasks: afm-dr-source-filesets.yml
      loop: "{{ afm_dr_mappings }}"
      loop_control:
        loop_var: source_fileset_mapping_loop
        index_var: index
#--------------------------------------------------------------------------

- hosts: afm-dr-target-gui-hostname
  vars:
    input: "{{ lookup('file','afm-dr-config.json') | from_json }}"

  pre_tasks:
   - name: Make Sure the mandatory input values are passed from the configuration json file - dr-config.json
     fail:
      msg: "Variables file dr-config.json must exist the same directory"
     when: input is not defined or input.source_scale_gui_username is not defined

  tasks:
    - set_fact:
        scale_remotemount_debug: true
        source_scale_gui_username: "{{ input.source_scale_gui_username }}"
        source_scale_gui_password: "{{ input.source_scale_gui_password }}"
        source_scale_gui_hostname: "{{ input.source_scale_gui_hostname }}"
        target_scale_gui_username: "{{ input.target_scale_gui_username }}"
        target_scale_gui_password: "{{ input.target_scale_gui_password }}"
        target_scale_gui_hostname: "{{ input.target_scale_gui_hostname }}"
        afm_dr_mappings: "{{ input.afm_dr_mappings }}"
        validate_certs_uri: "no"
        restapi_retries_count: 5
        restapi_retries_delay: 3
        scalemgmt_endpoint: "scalemgmt/v2"
        remote_mount_endpoint: "scalemgmt/v2/remotemount"

    - name: Mount Filesystem | target Cluster (access) | Add filesets 
      include_tasks: afm-dr-target-filesets.yml
      loop: "{{ afm_dr_mappings }}"
      loop_control:
        loop_var: target_fileset_mapping_loop
        index_var: index

#--------------------------------------------------------------------------

- hosts: afm-dr-source-gui-hostname
  vars:
    input: "{{ lookup('file','afm-dr-config.json') | from_json }}"

  pre_tasks:
   - name: Make Sure the mandatory input values are passed from the configuration json file - dr-config.json
     fail:
      msg: "Variables file dr-config.json must exist the same directory"
     when: input is not defined or input.source_scale_gui_username is not defined

  tasks:
    - set_fact:
        scale_remotemount_debug: true
        source_scale_gui_username: "{{ input.source_scale_gui_username }}"
        source_scale_gui_password: "{{ input.source_scale_gui_password }}"
        source_scale_gui_hostname: "{{ input.source_scale_gui_hostname }}"
        target_scale_gui_username: "{{ input.target_scale_gui_username }}"
        target_scale_gui_password: "{{ input.target_scale_gui_password }}"
        target_scale_gui_hostname: "{{ input.target_scale_gui_hostname }}"
        afm_dr_mappings: "{{ input.afm_dr_mappings }}"
        validate_certs_uri: "no"
        restapi_retries_count: 5
        restapi_retries_delay: 3
        scalemgmt_endpoint: "scalemgmt/v2"
        remote_mount_endpoint: "scalemgmt/v2/remotemount"

    - name: Mount Filesystem | target Cluster (access) | Add filesets 
      include_tasks: afm-dr-source-link-filesets.yml
      loop: "{{ afm_dr_mappings }}"
      loop_control:
        loop_var: target_fileset_link_loop
        index_var: index        