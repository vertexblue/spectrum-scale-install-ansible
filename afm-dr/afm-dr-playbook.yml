---
- hosts: all
  tasks:
    - name: Enable AFM on both clusters
      shell: /usr/lpp/mmfs/bin/mmchconfig afmEnableADR=yes -i
      register: ps
      
      changed_when: false
      failed_when: false

#----------------------------------------- target cluster ----------------------------------------------

- hosts: afm-dr-target-gui-hostname
  vars:
    input: "{{ lookup('file','afm-dr-config.json') | from_json }}"

  pre_tasks:
   - name: Make Sure the mandatory input values are passed from the configuration json file - dr-config.json
     fail:
      msg: "Variables file dr-config.json must exist the same directory"
     when: input is not defined or input.source_scale_gui_username is not defined

  tasks:
    - set_fact:
        scale_remotemount_debug: true
        source_scale_gui_username: "{{ input.source_scale_gui_username }}"
        source_scale_gui_password: "{{ input.source_scale_gui_password }}"
        source_scale_gui_hostname: "{{ input.source_scale_gui_hostname }}"
        target_scale_gui_username: "{{ input.target_scale_gui_username }}"
        target_scale_gui_password: "{{ input.target_scale_gui_password }}"
        target_scale_gui_hostname: "{{ input.target_scale_gui_hostname }}"
        afm_dr_mappings: "{{ input.afm_dr_mappings }}"
        validate_certs_uri: "no"
        restapi_retries_count: 5
        restapi_retries_delay: 3
        scalemgmt_endpoint: "scalemgmt/v2"
        remote_mount_endpoint: "scalemgmt/v2/remotemount"
      

    - name: Print input of filesystem names
      debug:
        msg: "{{ afm_dr_mappings | json_query(jmesquery) | unique }}"
      vars:
        jmesquery: "[*].target_scale_filesystem"  
      

    - set_fact:
        afm_dr_target_filesystem: "{{ afm_dr_mappings | json_query(jmesquery) | unique }}"
      vars:
        jmesquery: "[*].target_scale_filesystem"
  
    - name: Print configuration of filesystem names
      debug:
        msg: "{{ afm_dr_target_filesystem }}"
      vars:
        jmesquery: "[*].target_scale_filesystem"  

    - name: target Cluster (access) | Initialize variables
      include_tasks: afm-dr-common.yml
      

    - name: Print Source cluster name
      debug:
        msg: "{{ source_cluster_name }}"
        

    - name: Print Source cluster filesystem names
      debug:
        msg: "{{ source_filesystem | json_query(jmesquery) }}"
      vars:
        jmesquery: "[*].name"

    - name: Print Source cluster file mountpoints
      debug:
        msg: "{{ source_filesystem | json_query(jmesquery) }}"
      vars:
        jmesquery: "[*].mount.mountPoint"  
        

    - name: Print Source cluster specific mountpoints
      debug:
        msg: "{{ source_filesystem | json_query(jmesquery) }}"
      vars:
        jmesquery: "[?name=='prdfs1'].mount.mountPoint"  
       

    - set_fact:
        target_storage_nodes: []  

    - name: Build a list of all the storage node names
      set_fact:
        target_storage_nodes: "{{ target_storage_nodes }} + [ '{{ item.split('.').0 }}' ]"
      with_items: "{{ target_cluster_storage_nodes_name }}"

    - name: Print Source cluster storage nodes
      debug:
        msg: "{{ target_storage_nodes }}"
      

    - name: target Cluster (access) | Check source cluster on the target cluster
      command: /usr/lpp/mmfs/bin/mmauth show {{source_cluster_name}}
      register: check_mmauth_show

    - name: target Cluster (access) | Add source cluster on the target cluster
      command: /usr/lpp/mmfs/bin/mmauth add {{source_cluster_name}} -k "/var/mmfs/ssl/source_rsa.pub"
      register: auth_key_return
      failed_when: auth_key_return.rc > 1
      when: check_mmauth_show.rc > 1

    - name: target Cluster (access) | Granting and afm configuration of the filesystem
      include_tasks: afm-dr-target-filesystem.yml
      loop: "{{ afm_dr_target_filesystem }}"
      
      loop_control:
        loop_var: target_filesystem_loop
        index_var: index   
     
    - name: target Cluster (access) | Assign gateway role to storage nodes
      command: /usr/lpp/mmfs/bin/mmchnode -N {{target_storage_nodes | join(',')}} --gateway
      register: gateway_assignment_return
      failed_when: (gateway_assignment_return.rc !=0)

    - name: Add gateway response
      debug:
        msg: "{{ gateway_assignment_return }}"
      when: scale_remotemount_debug is defined and scale_remotemount_debug | bool  
      
#--------------------------------------------------------------------------      

- hosts: afm-dr-source-gui-hostname
  vars:
    input: "{{ lookup('file','afm-dr-config.json') | from_json }}"
  
  pre_tasks:
   - name: Make Sure the mandatory input values are passed from the configuration json file - dr-config.json
     fail:
      msg: "Variables file dr-config.json must exist the same directory"
     when: input is not defined or input.source_scale_gui_username is not defined

  tasks:
    - set_fact: 
        scale_remotemount_debug: true
        source_scale_gui_username: "{{ input.source_scale_gui_username }}"
        source_scale_gui_password: "{{ input.source_scale_gui_password }}"
        source_scale_gui_hostname: "{{ input.source_scale_gui_hostname }}"
        target_scale_gui_username: "{{ input.target_scale_gui_username }}"
        target_scale_gui_password: "{{ input.target_scale_gui_password }}"
        target_scale_gui_hostname: "{{ input.target_scale_gui_hostname }}"
        afm_dr_mappings: "{{ input.afm_dr_mappings }}"
        validate_certs_uri: "no"
        restapi_retries_count: 5
        restapi_retries_delay: 3
        scalemgmt_endpoint: "scalemgmt/v2"
        remote_mount_endpoint: "scalemgmt/v2/remotemount"

    - name: Mount Filesystem | target Cluster (access) | Add filesets 
      include_tasks: afm-dr-common.yml

    - set_fact:
        target_storage_nodes: []  

    - name: Build a list of all the storage node names
      set_fact:
        target_storage_nodes: "{{ target_storage_nodes }} + [ '{{ item.split('.').0 }}' ]"
      with_items: "{{ target_cluster_storage_nodes_name }}"

    - name: Print Source cluster storage nodes
      debug:
        msg: "{{ target_storage_nodes }}"

    - name: "target Cluster (access) | Assign remote cluster role to storage nodes"
      shell: mmremotecluster add {{target_cluster_name}} -n {{target_storage_nodes | join(',')}} -k "/var/mmfs/ssl/target_rsa.pub"
      register: assign_remotecluster_return      
      ignore_errors: true  

    - name: Print output for remote cluster assignment
      debug:
        msg: "{{ assign_remotecluster_return }}"
       

    - name: Print input of filesystem names
      debug:
        msg: "{{ afm_dr_mappings | json_query(jmesquery) | unique }}"
      vars:
        jmesquery: "[*].target_scale_filesystem"  

    - set_fact:
        afm_dr_target_filesystem: "{{ afm_dr_mappings | json_query(jmesquery) | unique }}"
      vars:
        jmesquery: "[*].target_scale_filesystem"
  
    - name: Print configuration of filesystem names
      debug:
        msg: "{{ afm_dr_target_filesystem }}"
      vars:
        jmesquery: "[*].target_scale_filesystem" 

    - name: Mount Filesystem | target Cluster (access) | Add and Mount the filesystems
      include_tasks: afm-dr-filesystems.yml
      loop: "{{ afm_dr_target_filesystem }}"
      
      loop_control:
        loop_var: target_filesystem_loop
        index_var: index

    - name: Mount Filesystem | target Cluster (access) | Add filesets 
      include_tasks: afm-dr-source-filesets.yml
      loop: "{{ afm_dr_mappings }}"
      loop_control:
        loop_var: fileset_loop
        index_var: index

#--------------------------------------------------------------------------

- hosts: afm-dr-target-gui-hostname
  vars:
    input: "{{ lookup('file','afm-dr-config.json') | from_json }}"

  pre_tasks:
   - name: Make Sure the mandatory input values are passed from the configuration json file - dr-config.json
     fail:
      msg: "Variables file dr-config.json must exist the same directory"
     when: input is not defined or input.source_scale_gui_username is not defined

  tasks:
    - set_fact:
        scale_remotemount_debug: true
        source_scale_gui_username: "{{ input.source_scale_gui_username }}"
        source_scale_gui_password: "{{ input.source_scale_gui_password }}"
        source_scale_gui_hostname: "{{ input.source_scale_gui_hostname }}"
        target_scale_gui_username: "{{ input.target_scale_gui_username }}"
        target_scale_gui_password: "{{ input.target_scale_gui_password }}"
        target_scale_gui_hostname: "{{ input.target_scale_gui_hostname }}"
        afm_dr_mappings: "{{ input.afm_dr_mappings }}"
        validate_certs_uri: "no"
        restapi_retries_count: 5
        restapi_retries_delay: 3
        scalemgmt_endpoint: "scalemgmt/v2"
        remote_mount_endpoint: "scalemgmt/v2/remotemount"

    - name: Mount Filesystem | target Cluster (access) | Add filesets 
      include_tasks: afm-dr-target-filesets.yml
      loop: "{{ afm_dr_mappings }}"
      loop_control:
        loop_var: fileset_loop
        index_var: index

#--------------------------------------------------------------------------

- hosts: afm-dr-source-gui-hostname
  vars:
    input: "{{ lookup('file','afm-dr-config.json') | from_json }}"

  pre_tasks:
   - name: Make Sure the mandatory input values are passed from the configuration json file - dr-config.json
     fail:
      msg: "Variables file dr-config.json must exist the same directory"
     when: input is not defined or input.source_scale_gui_username is not defined

  tasks:
    - set_fact:
        scale_remotemount_debug: true
        source_scale_gui_username: "{{ input.source_scale_gui_username }}"
        source_scale_gui_password: "{{ input.source_scale_gui_password }}"
        source_scale_gui_hostname: "{{ input.source_scale_gui_hostname }}"
        target_scale_gui_username: "{{ input.target_scale_gui_username }}"
        target_scale_gui_password: "{{ input.target_scale_gui_password }}"
        target_scale_gui_hostname: "{{ input.target_scale_gui_hostname }}"
        afm_dr_mappings: "{{ input.afm_dr_mappings }}"
        validate_certs_uri: "no"
        restapi_retries_count: 5
        restapi_retries_delay: 3
        scalemgmt_endpoint: "scalemgmt/v2"
        remote_mount_endpoint: "scalemgmt/v2/remotemount"

    - name: Mount Filesystem | target Cluster (access) | Add filesets 
      include_tasks: afm-dr-source-link-filesets.yml
      loop: "{{ afm_dr_mappings }}"
      loop_control:
        loop_var: fileset_loop
        index_var: index        